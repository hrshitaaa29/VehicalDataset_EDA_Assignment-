# -*- coding: utf-8 -*-
"""DAI_Assignment_23113064.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/140MahZvKIf2bFxg0cA6E5k4w1h3gfVAN
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

file_path = "/content/Car_details_v3.csv"
df = pd.read_csv(file_path)

display(df.head())

print(df.describe())

print(df.nunique())

"""Univariate Analysis: Focuses on a single variableâ€™s distribution, outliers, and frequency.

Histogram helps understand price distribution and skewness
"""

plt.figure(figsize=(10, 6))
sns.histplot(df['selling_price'], bins=30, kde=True)
plt.title("Selling Price Distribution")
plt.tight_layout()
plt.show()

"""Boxplot identifies outliers and median car age"""

plt.figure(figsize=(10, 6))
sns.boxplot(x=df['year'])
plt.title("Car Age Distribution")
plt.tight_layout()
plt.show()

"""Barplot shows frequency of different fuel types

"""

plt.figure(figsize=(10, 6))
sns.countplot(x=df['fuel'])
plt.title("Fuel Type Count")
plt.tight_layout()
plt.show()

"""Pie chart gives a proportion view of seller types

"""

plt.figure(figsize=(10, 6))
df['seller_type'].value_counts().plot.pie(autopct="%1.1f%%")
plt.title("Seller Type Distribution")
plt.tight_layout()
plt.show()

"""Multivariate Analysis: Explores relationships between variables to find patterns.

Scatterplot shows how price varies with age of cars
"""

plt.figure(figsize=(10, 6))
sns.scatterplot(x=df['year'], y=df['selling_price'])
plt.title("Price vs Year")
plt.tight_layout()
plt.show()

"""Heatmap reveals relationships between numeric variables"""

plt.figure(figsize=(10, 6))
numeric_df = df.select_dtypes(include=['number'])
sns.heatmap(numeric_df.corr(), annot=True, cmap='coolwarm', fmt=".2f")
plt.title("Feature Correlation Heatmap")
plt.tight_layout()
plt.show()

"""Boxplot shows how fuel type impacts car price"""

plt.figure(figsize=(10, 6))
sns.boxplot(x=df['fuel'], y=df['selling_price'])
plt.title("Fuel Type vs Selling Price")
plt.tight_layout()
plt.show()

"""Violin plot combines boxplot with distribution insights

"""

plt.figure(figsize=(10, 6))
sns.violinplot(x=df['transmission'], y=df['selling_price'])
plt.title("Transmission vs Selling Price")
plt.tight_layout()
plt.show()

"""Pair Plot helps identify correlations and patterns visually, diagonal plots show univariate distributions."""

plt.figure(figsize=(10, 6))
selected_cols = ['year', 'selling_price', 'km_driven']
sns.pairplot(df[selected_cols])
plt.suptitle("Pair Plot of Year, Selling Price, and KM Driven", y=1.02)
plt.tight_layout()
plt.show()